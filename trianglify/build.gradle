plugins {
    alias(libs.plugins.android.library)
    id 'maven-publish'
}

android {
    namespace 'com.sdsmdg.kd.trianglify'
    compileSdk 34

    defaultConfig {
        minSdkVersion 22
        targetSdkVersion 34
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        aarMetadata {
            minCompileSdk = 22
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lint {
        abortOnError false
    }

    java {
        toolchain {
            languageVersion.set(JavaLanguageVersion.of(17))
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    publishing {
        multipleVariants {
            allVariants()
            withSourcesJar()
        }
    }
}

publishing {
    publications {
        release(MavenPublication) {
            groupId = 'com.github.ExploiTR'
            artifactId = 'trianglify'
            version = '1.0.3'
        }
    }

    repositories {
        maven {
            name = 'myrepo'
            url = layout.buildDirectory.dir("repo/")
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    androidTestImplementation('androidx.test.espresso:espresso-core:3.5.1', {
        exclude group: 'androidx.annotation', module: 'annotation'
    })

    implementation libs.appcompat
    testImplementation libs.junit
    testImplementation libs.mockito.core
    implementation(platform(libs.kotlin.bom))
}

tasks.register('generateRepo', Zip) {
    dependsOn 'copyAar'
    def publishTask = tasks.named('publishReleasePublicationToMyrepoRepository')
    from publishTask.map { it.getRepository().getUrl() }
    into 'mylibrary'
    archiveFileName.set('mylib.zip')
}

tasks.register('copyAar', Copy) {
    dependsOn 'assembleRelease'
    from(layout.buildDirectory.dir("outputs/aar"))
    include("*.aar")
    into(layout.buildDirectory.dir("repo/com/github/ExploiTR/trianglify/1.0.3"))

    doLast {
        println "AAR file copied to" + layout.buildDirectory.dir("repo/com/github/ExploiTR/trianglify/1.0.3")
    }
}

tasks.named('publish').configure {
    dependsOn 'copyAar'
}